// Code generated by MockGen. DO NOT EDIT.
// Source: session_token_refresher.go

// Package mock_account is a generated GoMock package.
package mock_account

import (
	reflect "reflect"
	time "time"

	user "github.com/CA22-game-creators/cookingbomb-apiserver/domain/model/user"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockSessionTokenRefresher is a mock of SessionTokenRefresher interface.
type MockSessionTokenRefresher struct {
	ctrl     *gomock.Controller
	recorder *MockSessionTokenRefresherMockRecorder
}

// MockSessionTokenRefresherMockRecorder is the mock recorder for MockSessionTokenRefresher.
type MockSessionTokenRefresherMockRecorder struct {
	mock *MockSessionTokenRefresher
}

// NewMockSessionTokenRefresher creates a new mock instance.
func NewMockSessionTokenRefresher(ctrl *gomock.Controller) *MockSessionTokenRefresher {
	mock := &MockSessionTokenRefresher{ctrl: ctrl}
	mock.recorder = &MockSessionTokenRefresherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionTokenRefresher) EXPECT() *MockSessionTokenRefresherMockRecorder {
	return m.recorder
}

// Handle mocks base method.
func (m *MockSessionTokenRefresher) Handle(user user.User, newSessionToken uuid.UUID, expiredAt time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handle", user, newSessionToken, expiredAt)
	ret0, _ := ret[0].(error)
	return ret0
}

// Handle indicates an expected call of Handle.
func (mr *MockSessionTokenRefresherMockRecorder) Handle(user, newSessionToken, expiredAt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockSessionTokenRefresher)(nil).Handle), user, newSessionToken, expiredAt)
}
