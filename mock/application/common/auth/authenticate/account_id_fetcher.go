// Code generated by MockGen. DO NOT EDIT.
// Source: account_id_fetcher.go

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	reflect "reflect"

	user "github.com/CA22-game-creators/cookingbomb-apiserver/domain/model/user"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountIDFetcher is a mock of AccountIDFetcher interface.
type MockAccountIDFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockAccountIDFetcherMockRecorder
}

// MockAccountIDFetcherMockRecorder is the mock recorder for MockAccountIDFetcher.
type MockAccountIDFetcherMockRecorder struct {
	mock *MockAccountIDFetcher
}

// NewMockAccountIDFetcher creates a new mock instance.
func NewMockAccountIDFetcher(ctrl *gomock.Controller) *MockAccountIDFetcher {
	mock := &MockAccountIDFetcher{ctrl: ctrl}
	mock.recorder = &MockAccountIDFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountIDFetcher) EXPECT() *MockAccountIDFetcherMockRecorder {
	return m.recorder
}

// Handle mocks base method.
func (m *MockAccountIDFetcher) Handle(sessionToken string) (user.ID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handle", sessionToken)
	ret0, _ := ret[0].(user.ID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Handle indicates an expected call of Handle.
func (mr *MockAccountIDFetcherMockRecorder) Handle(sessionToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockAccountIDFetcher)(nil).Handle), sessionToken)
}
